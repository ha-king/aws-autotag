AWSTemplateFormatVersion: '2010-09-09'
Description: 'This template will deploy an AWS Lambda function that will respond to CloudTrail Events and create tags to describe ownership and usage history.'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Prerequisites
        Parameters:
          - IsCloudTrailEnabled
    ParameterLabels:
      IsCloudTrailEnabled:
        default: Is CloudTrail already enabled in this region? CloudTrail is a requirement
          for Cloudwatch Events. If not enabled, please enable CloudTrail before proceeding.
Parameters:
  IsCloudTrailEnabled:
    Description: Specify if CloudTrail is enabled in the current region
    Type: String
    Default: 'Yes'
    AllowedValues:
      - 'Yes'
      - 'No'
Conditions:
  CreateResources: !Equals [!Ref 'IsCloudTrailEnabled', 'Yes']
Resources:
  EC2EventRule:
    Type: AWS::Events::Rule
    Condition: CreateResources
    Properties:
      Description: Trigger a Lambda function anytime a new EC2 resource is created
        or updated (EC2 instance, EBS volume, EBS Snapshot or AMI)
      EventPattern:
        detail-type:
          - AWS API Call via CloudTrail
        detail:
          eventSource:
            - ec2.amazonaws.com
          eventName:
            - CreateVolume
            - RunInstances
            - CreateImage
            - CreateSnapshot
            - AttachVolume
            - DetachVolume
            - StartInstances
            - CreateStack
      Name: Action-EC2Resource-Event
      State: ENABLED
      Targets:
        - Arn: !Ref 'ProductionAlias'
          Id: Production
  CFAutoTag:
    Type: AWS::Lambda::Function
    Condition: CreateResources
    Properties:
      Code:
        S3Bucket: 'infascination-public-oregon'
        S3Key: 'auto-tagging.zip'
      Description: This function tags EC2 Resources in response to Cloudwatch Events.
      Handler: index.lambda_handler
      Role: !GetAtt 'LambdaAutoTagRole.Arn'
      Runtime: python2.7
      Timeout: '60'
  StableVersion:
    Type: AWS::Lambda::Version
    Condition: CreateResources
    Properties:
      FunctionName: !Ref 'CFAutoTag'
      Description: Stable version
  ProductionAlias:
    Type: AWS::Lambda::Alias
    Condition: CreateResources
    Properties:
      FunctionName: !Ref 'CFAutoTag'
      FunctionVersion: !GetAtt 'StableVersion.Version'
      Name: PROD
  PermissionForEventsToInvokeLambda:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref 'ProductionAlias'
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt 'EC2EventRule.Arn'
  LambdaAutoTagRole:
    Type: AWS::IAM::Role
    Condition: CreateResources
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: LambdaAutoTagEC2Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Sid: AllowCloudTrailLookupEvents
                Effect: Allow
                Action:
                  - cloudtrail:LookupEvents
                Resource:
                  - '*'
              - Sid: AllowEC2TaggingPlusLogging
                Effect: Allow
                Action:
                  - ec2:CreateTags
                  - ec2:Describe*
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - '*'
  ManageEC2InstancesGroup:
    Type: AWS::IAM::Group
    Condition: CreateResources
  TagBasedEC2RestrictionsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: CreateResources
    Properties:
      Description: This policy allows Administration for EC2 instances.
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AdminEC2Instances
            Effect: Allow
            Action:
              - ec2:*
            Resource:
              - '*'
      Groups:
        - !Ref 'ManageEC2InstancesGroup'
